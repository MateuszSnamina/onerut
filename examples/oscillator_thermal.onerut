#!/usr/local/bin/onerut

########################################
# Define the vibronic Hilbert space    #
########################################
OSCILLATOR_DOMAIN := oscillator_domain(20)

########################################
# Define handy references              #
# for standard vibronic operators      #
########################################
new const vacuum_state := state_index(OSCILLATOR_DOMAIN, 0)
new const eye := eye(OSCILLATOR_DOMAIN)
new const cr := cr(OSCILLATOR_DOMAIN)
new const an := an(OSCILLATOR_DOMAIN)
new const x  := (1/sqrt(2)) * ( cr + an)
new const ip := (1/sqrt(2)) * (-cr + an)
new const n := cr * an

########################################
# Standard oscilator                  ##
########################################

H := n + (1./2) * eye
#VALUE(H)

################################################
# Eigenstates of the displaced hamiltonian    ##
################################################

eig := eigd(H) #_lambda
LATCH(eig)
#VALUE(eig)

################################################
# finite temperature as a parameter           ##
################################################

temperature := 2.7 # impose some temperature

################################################
# energy in finite temperature                ##
################################################

energy_analitycal := 0.5 / tanh(1.0 / [2.0*temperature])
energy_numerical := thermal_mean(H, eig, temperature)
VALUE(energy_analitycal)
VALUE(energy_numerical) 

################################################
# specific heat in finite temperature         ##
################################################

specific_heat_analitycal := 0.25 / ( temperature * sinh(1.0 / [2.0*temperature]))^2
mean_energy := thermal_mean(H, eig, temperature)
mean_energy2 := thermal_mean(H * H, eig, temperature)
var_energy := mean_energy2 - mean_energy^2
specific_heat_numerical := var_energy / temperature^2
VALUE(specific_heat_analitycal)
VALUE(specific_heat_numerical) 

