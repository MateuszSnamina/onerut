#!/usr/local/bin/onerut

########################################
# Define Fock Hilbert space            #
########################################

new const n_particles := 2

FOCK_DOMAIN := fock_domain(n_particles, H1u, H1d, H2u, H2d)

########################################
# Define Hubbard model                 #
########################################

new const t := 0.3
new const U := 1

new const H_t := fock_hop(1, H1u, H2u) + fock_hop(1, H1d, H2d)
new const H_U := fock_n(1, H1u) * fock_n(1, H1d) +  fock_n(1, H2u) * fock_n(1, H2d)
new const H := t * H_t + U * H_U

VALUE(H)

########################################
# Diagonalize model model              #
########################################

new const eig := eigd(H)
VALUE(eig)

########################################
# Analytical solution                  #
########################################

# For sake of verification,
# there are the analytical formulas
# for all the eigenenergies:

# S0 == 2*t|00> + E|D+>
# T  == |1:1> |1:0> |1:-1>
# S1 == |D->
# S2 == 2*t|00> - E|D+>

new const E_S0 := 0.5 * [U - sqrt(U^2 + 16*t^2) ] 
new const E_T  := 0
new const E_S1 := U  
new const E_S2 := 0.5 * [U + sqrt(U^2 + 16*t^2) ]

VALUE(E_S0)
VALUE(E_T)
VALUE(E_S1)
VALUE(E_S2)
